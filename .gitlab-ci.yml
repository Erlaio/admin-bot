image: alpine:latest

stages:
    - build

before_script:
  - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_TOKEN" $CI_REGISTRY
  - echo "KEY=\"$KEY\"" > .env
  - echo "SQLITE_FILENAME=\"$SQLITE_FILENAME\"" >> .env
  - echo "SECRET_KEY=\"$SECRET_KEY\"" >> .env
  - echo "TELEGRAM_MODERS_CHAT_ID=\"$TELEGRAM_MODERS_CHAT_ID\"" >> .env
  - echo "TELEGRAM_SCHOOL_CHATS=\"$TELEGRAM_SCHOOL_CHATS\"" >> .env

BuildApp:
    stage: build
    tags:
        - "admin-bot"
    script:
      - |
        if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
          tag=""
          echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
        else
          tag=":$CI_COMMIT_REF_SLUG"
          echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
        fi

      - git clone https://"$CI_DEPLOY_USER":"$CI_DEPLOY_TOKEN"@$CI_PROJECT_LINK
      - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
      - docker compose up --build -d
      - docker push "$CI_REGISTRY_IMAGE${tag}"
    rules:
      - if: '$CI_COMMIT_BRANCH == "main"'
        when: always
      - if: '$CI_COMMIT_BRANCH == "develop"'
        when: always
      - when: never
      - if: $CI_COMMIT_BRANCH
        exists:
          - Dockerfile
